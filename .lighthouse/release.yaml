apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: release
spec:
  serviceAccountName: tekton-bot
  pipelineSpec:
    params:
    - description: git url to clone
      name: REPO_URL
      type: string
    - default: master
      description: the base git reference of the pull request
      # PULL_BASE_REF isn't the best name: https://stackoverflow.com/a/55460756/6180803
      # https://github.com/jenkins-x/lighthouse/blob/cde789ba2cd6835613553351978420be6a583f55/pkg/engines/tekton/test_data/controller/start-batch-pullrequest/observed-lhjob.yml#L32-L33
      name: PULL_BASE_REF
      type: string
    tasks:
    - name: calculate-image-tag
      params:
      - name: PULL_BASE_REF
        value: $(params.PULL_BASE_REF)
      taskSpec:
        params:
        - default: master
          description: the base git reference of the pull request
          name: PULL_BASE_REF
          type: string
        results:
        - name: tag
          description: Docker image tag
        steps:
        - name: calculate-image-tag
          image: busybox:1.32
          command:
          - /bin/sh
          args:
          - -ce
          - |
            TAG="$(inputs.params.PULL_BASE_REF)"
            if [ "$TAG" = "master" ]; then
              TAG="latest"
            fi
            echo -n $TAG > $(results.tag.path)
    - name: clone-build-test-push
      params:
      - name: REPO_URL
        value: $(params.REPO_URL)
      - name: PULL_BASE_REF
        value: $(params.PULL_BASE_REF)
      - name: tag
        value: $(tasks.calculate-image-tag.results.tag)
      taskSpec:
        params:
        - description: git url to clone
          name: REPO_URL
          type: string
        - default: master
          description: the base git reference of the pull request
          name: PULL_BASE_REF
          type: string
        - description: Docker image tag
          name: tag
          type: string
        stepTemplate:
          name: ""
          volumeMounts:
          - name: workspace
            mountPath: /workspace
        steps:
        - name: git-clone
          image: alpine/git:v2.30.0
          command:
          - /bin/sh
          args:
          - -ce
          - |
            mkdir -p $HOME;
            git config --global --add user.name dippynark-bot;
            git config --global --add user.email lukeaddison785@gmail.com;
            git config --global credential.helper store;
            git clone $(inputs.params.REPO_URL) .;
            echo cloned url: $(inputs.params.REPO_URL) to dir: `pwd`;
            git checkout $(inputs.params.PULL_BASE_REF);
            echo checked out PULL_BASE_REF: $(inputs.params.PULL_BASE_REF) to dir: `pwd`
          workingDir: /workspace
        - name: build-test-release
          image: dippynark/kfmt-build:v1.0.0
          command:
          - make
          - build
          - test
          - release
          workingDir: /workspace
          volumeMounts:
          - name: go-pkg-mod
            mountPath: /go/pkg/mod
        # Verify there are no changes
        - name: git-status
          image: alpine/git:v2.30.0
          command:
          - /bin/sh
          args:
          - -ce
          - |
            if [ -n "$(git status --porcelain)" ]; then
              git status --porcelain
              exit 1
            fi
          workingDir: /workspace
        - name: kaniko-build-push
          image: gcr.io/kaniko-project/executor:v1.3.0
          args:
          - --dockerfile=Dockerfile
          - --context=dir:///workspace
          - --destination=dippynark/kfmt:$(inputs.params.tag)
          - --cache
          - --cache-repo=dippynark/kfmt-cache
          volumeMounts:
          - name: kaniko-secret
            mountPath: /kaniko/.docker
        # https://github.com/tektoncd/catalog/blob/master/task/create-github-release/0.1/create-github-release.yaml
        - name: github-release
          workingDir: /workspace
          image: quay.io/diagrawa/github-hub@sha256:a002e05e3c3362f49dc31b8c16c10d76c6dbd854fdb0f596eaae8ac8b792adfb #tag: latest
          env:
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: tekton-git
                key: password
          script: |
            #!/usr/bin/env bash
            set -ex

            if [ "$(inputs.params.tag)" = "latest" ]; then
              exit 0
            fi

            # Create release description with the tag as the title
            echo "$(inputs.params.tag)" > release.txt

            echo "Creating release $(inputs.params.tag)"
            hub release create \
              --file release.txt \
              --attach bin/checksums.txt \
              --attach bin/kfmt-darwin-amd64 \
              --attach bin/kfmt-linux-amd64 \
              --attach bin/kfmt-windows-amd64.exe \
              $(inputs.params.tag)
        volumes:
        - name: workspace
          emptyDir: {}
        - name: go-pkg-mod
          hostPath:
            path: /mnt/ssd/data/go/pkg/mod
        - name: kaniko-secret
          secret:
            secretName: tekton-container-registry-auth
            items:
            - key: .dockerconfigjson
              path: config.json
