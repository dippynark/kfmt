apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: release
spec:
  serviceAccountName: tekton-bot
  pipelineSpec:
    params:
    - name: REPO_URL
      type: string
    - default: main
      # PULL_BASE_REF isn't the best name: https://stackoverflow.com/a/55460756/6180803
      # https://github.com/jenkins-x/lighthouse/blob/cde789ba2cd6835613553351978420be6a583f55/pkg/engines/tekton/test_data/controller/start-batch-pullrequest/observed-lhjob.yml#L32-L33
      name: PULL_BASE_REF
      type: string
    tasks:
    - name: determine-image-tag
      params:
      - name: PULL_BASE_REF
        value: $(params.PULL_BASE_REF)
      taskSpec:
        params:
        - name: PULL_BASE_REF
          type: string
        results:
        - name: IMAGE_TAG
        steps:
        - name: determine-image-tag
          image: busybox:1.35
          command:
          - /bin/sh
          args:
          - -ce
          - |
            IMAGE_TAG="$(inputs.params.PULL_BASE_REF)"
            if [ "$IMAGE_TAG" = "main" ]; then
              IMAGE_TAG="latest"
            fi
            echo -n $IMAGE_TAG > $(results.IMAGE_TAG.path)
    - name: git-clone-test-build-push-release
      params:
      - name: REPO_URL
        value: $(params.REPO_URL)
      - name: PULL_BASE_REF
        value: $(params.PULL_BASE_REF)
      - name: IMAGE_TAG
        value: $(tasks.determine-image-tag.results.IMAGE_TAG)
      taskSpec:
        params:
        - name: REPO_URL
          type: string
        - name: PULL_BASE_REF
          type: string
        - name: IMAGE_TAG
          type: string
        steps:
        - name: git-clone
          image: alpine/git:v2.34.2
          command:
          - /bin/sh
          args:
          - -ce
          - |
            git clone $(inputs.params.REPO_URL) .
            git checkout $(inputs.params.PULL_BASE_REF)
          workingDir: /workspace
          volumeMounts:
          - name: workspace
            mountPath: /workspace
        - name: test-build
          image: golang:1.18-alpine
          command:
          - /bin/sh
          args:
          - -ce
          - |
            apk add --update make
            make test build VERSION=$(params.PULL_BASE_REF)
          workingDir: /workspace
          volumeMounts:
          - name: workspace
            mountPath: /workspace
          - name: go-pkg-mod
            mountPath: /go/pkg/mod
        - name: build-push
          image: gcr.io/kaniko-project/executor:v1.8.1
          command:
          - /kaniko/executor
          args:
          - --dockerfile=Dockerfile
          - --context=dir:///workspace
          - --destination=dippynark/kfmt:$(inputs.params.IMAGE_TAG)
          - --cache
          - --cache-repo=dippynark/kfmt-cache
          - --build-arg=VERSION=$(params.PULL_BASE_REF)
          # https://github.com/tektoncd/catalog/blob/37e8a986d97930fb009a25271166accbe14338c7/task/kaniko/0.1/kaniko.yaml#L45-L49
          env:
          - name: DOCKER_CONFIG
            value: /tekton/creds/.docker
          volumeMounts:
          - name: workspace
            mountPath: /workspace
        - name: release
          image: golang:1.18-alpine
          command:
          - /bin/sh
          args:
          - -ce
          - |
            if [ "$(inputs.params.PULL_BASE_REF)" = "main" ]; then
              exit 0
            fi
            apk add --update make
            make release VERSION=$(params.PULL_BASE_REF)
          workingDir: /workspace
          volumeMounts:
          - name: workspace
            mountPath: /workspace
          - name: go-pkg-mod
            mountPath: /go/pkg/mod
        # https://github.com/tektoncd/catalog/blob/master/task/create-github-release/0.1/create-github-release.yaml
        - name: github-release
          image: quay.io/diagrawa/github-hub@sha256:a002e05e3c3362f49dc31b8c16c10d76c6dbd854fdb0f596eaae8ac8b792adfb #tag: latest
          env:
          - name: HOME
            value: /tekton/creds
          script: |
            #!/usr/bin/env bash
            set -euo pipefail

            if [ "$(inputs.params.PULL_BASE_REF)" = "main" ]; then
              exit 0
            fi

            # Create release title
            echo -e "$(inputs.params.PULL_BASE_REF)\n" > release.txt

            # Create release description
            # https://stackoverflow.com/a/40256763/6180803
            if git describe --tags $(inputs.params.PULL_BASE_REF)^ >/dev/null 2>&1; then
              # A previous tag exists so retrieve commit messages between tags
              git log $(git describe --tags --abbrev=0 $(inputs.params.PULL_BASE_REF)^)..$(inputs.params.PULL_BASE_REF) --oneline >> release.txt
            else
              # No previous tag exists so retrieve all commit messages before tag
              git log $(inputs.params.PULL_BASE_REF) --oneline >> release.txt
            fi

            # Creating release
            hub release create \
              --file release.txt \
              --attach bin/checksums.txt \
              --attach bin/kfmt-darwin-amd64 \
              --attach bin/kfmt-darwin-arm64 \
              --attach bin/kfmt-linux-amd64 \
              --attach bin/kfmt-windows-amd64.exe \
              $(inputs.params.PULL_BASE_REF)
          workingDir: /workspace
          volumeMounts:
          - name: workspace
            mountPath: /workspace
        volumes:
        - name: workspace
          emptyDir: {}
        - name: go-pkg-mod
          hostPath:
            path: /mnt/ssd/data/go/pkg/mod
